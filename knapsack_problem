def knapsack(weights, profits, capacity):
    n = len(weights)
    dp = [[0] * (capacity + 1) for _ in range(n + 1)]

    for i in range(1, n + 1):
        for w in range(1, capacity + 1):
            if weights[i - 1] <= w:
                dp[i][w] = max(profits[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w])
            else:
                dp[i][w] = dp[i - 1][w]

    return dp[n][capacity]

weights = []
profits = []
n = int(input("Enter the number of objects: "))

for i in range(1, n + 1):
    weight = int(input(f"Enter weight for item {i}: "))
    profit = int(input(f"Enter profit for item {i}: "))
    weights.append(weight)
    profits.append(profit)

knapsack_weight = int(input("Enter the knapsack weight: "))
result = knapsack(weights, profits, knapsack_weight)
print(f"Maximum profit in Knapsack: {result}")
